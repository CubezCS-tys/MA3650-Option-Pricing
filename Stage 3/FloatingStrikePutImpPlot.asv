% ==============
% Parameters
% ==============
S0    = 151;
Max   = 200;
r     = 0.1;
T     = 1;
sigma = 0.4;
Smax  = 500;
dS    = 0.05;
dt    = 0.001;

% ==============
% Solve PDE
% ==============
[callPrice, zGrid, matVal] = FloatingStrikePutImp(S0, Max, r, T, sigma, Smax, dS, dt);

% ---------------------------
% 1) Convert z -> S,  u(z) -> V(S)
% ---------------------------
SGrid = Max .* zGrid;            % Real-space stock price
V0    = Max .* matVal(:,1);      % Option value at t=0
VT    = Max .* matVal(:,end);    % Option "value" at t=T (the payoff)

% ---------------------------
% 2) Restrict plots to S >= Min
% ---------------------------
idx = find(SGrid >= Min, 1);  % first index where SGrid >= Min

% ---------------------------
% 3) Plot initial value and terminal payoff on the same axes
% ---------------------------
figure;
plot(SGrid(idx:end), V0(idx:end), 'b-','LineWidth',1.5); 
hold on;
plot(SGrid(idx:end), VT(idx:end), 'r--','LineWidth',1.5);
xlabel('Stock Price S');
ylabel('Option Value V(S)');
legend('Value at t=0','Payoff at t=T','Location','NorthWest');
title('Floating-Strike Lookback Put');
grid on;

% ---------------------------
% 4) Print the option value at S0
% ---------------------------
% We can directly use the 'callPrice' returned by FloatingStrikeCallImp,
% or do interpolation on the computed grid:
valAtS0 = interp1(SGrid, V0, S0, 'linear');

disp(['Option value at S0 = ', num2str(S0), ' is: ', num2str(valAtS0)]);
